<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>Google Maps JavaScript API Example</title>
    <style type="text/css">
    v\:* {
      behavior:url(#default#VML);
    }
    </style>
    <link rel="stylesheet" type="text/css" href="http://www.google.com/apis/maps/documentation/local_extensions.css" />
    <script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjU0EJWnWPMv7oQ-jjS7dYxSPW5CJgpdgO_s4yyMovOaVh_KvvhSfpvagV18eOyDWu7VytS6Bi1CWxw"
      type="text/javascript"></script>
    <script src="http://www.google.com/apis/maps/include/prettify.js" type="text/javascript"></script>
 
<script type="text/javascript">
   //<![CDATA[

   var map;

   function load() {
     if (GBrowserIsCompatible()) {
       map = new GMap2(document.getElementById("map"));
       map.setCenter(new GLatLng(40.713955826286046,-35.15625), 2);
       updateCode();
     }
   }

   function updateCode() {
     map.clearOverlays();

     var code = [];
     var lat = map.getCenter().lat();
     var lng = map.getCenter().lng();
     code.push("var point = new GLatLng(" + lat.toFixed(6) 
       + "," + lng.toFixed(6) + ");");

     var opts = [];

     var val_title = el("opt_title").value;
     if (val_title) {
       opts.push("title: \"" + val_title + "\"");
     }

     var val_icon = el("opt_icon").value;
     if (val_icon != "default") {
       // TODO insert code for creating blue or red icons into code
       opts.push("icon: " + val_icon);

       if(val_icon == "iconBlue") {
         code.push("var iconBlue = new GIcon(); <br/>" 
           + "iconBlue.image = 'http://labs.google.com/ridefinder/images/mm_20_blue.png';<br/>"
           + "iconBlue.shadow = 'http://labs.google.com/ridefinder/images/mm_20_shadow.png';<br/>"
           + "iconBlue.iconSize = new GSize(12, 20);<br/>"
           + "iconBlue.shadowSize = new GSize(22, 20);<br/>"
           + "iconBlue.iconAnchor = new GPoint(6, 20);<br/>"
           + "iconBlue.infoWindowAnchor = new GPoint(5, 1);<br/>");
       } else if(val_icon == "iconRed") {
         code.push("var iconRed = new GIcon(); <br/>" 
           + "iconRed.image = 'http://labs.google.com/ridefinder/images/mm_20_red.png';<br/>"
           + "iconRed.shadow = 'http://labs.google.com/ridefinder/images/mm_20_shadow.png';<br/>"
           + "iconRed.iconSize = new GSize(12, 20);<br/>"
           + "iconRed.shadowSize = new GSize(22, 20);<br/>"
           + "iconRed.iconAnchor = new GPoint(6, 20);<br/>"
           + "iconRed.infoWindowAnchor = new GPoint(5, 1);<br/>");
       }
     }

     if (el("opt_clickable").checked) {

       if (el("opt_draggable").checked) {
         opts.push("draggable: true");

         if (el("opt_bouncy").checked) {
           var val_bounceGravity = parseFloat(el("opt_bounceGravity").value);
           if (val_bounceGravity != 1.0) {
             opts.push("bounceGravity: " + val_bounceGravity + "");
           }
         } else {
           opts.push("bouncy: false");
         }

         if (el("opt_dragCrossMove").checked) {
           opts.push("dragCrossMove: true");
         }
       }
     } else {
       opts.push("clickable: false");
     }

     if (opts.length) {
       code.push("var options = { <br/>"
                + opts.join(",<br/>") + "<br/>"
                + "};");
     }
     code.push("var marker = new GMarker(point" +
         (opts.length ? ", options" : "") + ");");

     code.push("map.addOverlay(marker);");
 
     var codeHTML = code.join("<br/><br/>");
     el("code").innerHTML = codeHTML;

     var codeJS = codeHTML.replace(/<br\/>/g,"\n");
     eval(codeJS);

     prettyPrint();
   }

   function el(id) {
     return document.getElementById(id);
   }

   //]]>
   </script>

 </head>

 <body onload="load()" onunload="GUnload()">
   clickable:<input type="checkbox" id="opt_clickable" onclick="updateCode()" CHECKED/>
   &nbsp;
   draggable:<input type="checkbox" id="opt_draggable" onclick="updateCode()" CHECKED/>
   &nbsp;
   bouncy:<input type="checkbox" id="opt_bouncy" onclick="updateCode()" />
   &nbsp;
   dragCrossMove:<input type="checkbox" id="opt_dragCrossMove" onclick="updateCode()"/>

   &nbsp;
   bounceGravity:
     <select id="opt_bounceGravity" onchange="updateCode()">
       <option value="1.0" SELECTED>1.0</option>
       <option value="0.8">0.8</option>
       <option value="0.6">0.6</option>
       <option value="0.4">0.4</option>

       <option value="0.2">0.2</option>
  </select>
   &nbsp;
   <br/><br/>
   title:<input type="text" id="opt_title" size="10" value=""
       onkeyup="updateCode()" onkeypress="updateCode()"/>
   &nbsp;
   icon:
   <select id="opt_icon" onchange="updateCode()">

     <option value="default" SELECTED>default</option>
     <option value="iconBlue">blue</option>
     <option value="iconRed">red</option>
   </select>
   &nbsp;
   <br/><br/>

    <div id="map" style="width: 500px; height: 250px"></div>

    <pre class="prettyprint" id="code" style="width:500px; overflow:auto;"></pre>

   </table>
 </body>
</html>
