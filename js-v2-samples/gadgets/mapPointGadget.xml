<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Map Point" height="300" author="author" >
    <Require feature="setprefs" />
  </ModulePrefs>
  <UserPref name="address" display_name="Location" 
    datatype="string" default_value="San Francisco" /> 
  <UserPref name="popupText" display_name="Popup Text" datatype="string" 
      default_value="Edit gadget settings to customize the map." 
      required="false" />
  <UserPref name="showPopup" display_name="Show Popup" datatype="bool"
  default_value="true" />
  <UserPref name="mapType" display_name="Map Type" default_value="0"
      datatype="enum" required="true" >
    <EnumValue value="0" display_value="Map" />
    <EnumValue value="1" display_value="Satellite" />
    <EnumValue value="2" display_value="Hybrid" />
  </UserPref>
  <UserPref name="zoom" display_name="Zoom" default_value="10" datatype="enum"
      required="true">
      <EnumValue value="1" />
      <EnumValue value="2" />
      <EnumValue value="3" />
      <EnumValue value="4" />
      <EnumValue value="5" />
      <EnumValue value="6" />
      <EnumValue value="7" />
      <EnumValue value="8" />
      <EnumValue value="9" />
      <EnumValue value="10" />
      <EnumValue value="11" />
      <EnumValue value="12" />
      <EnumValue value="13" />
      <EnumValue value="14" />
      <EnumValue value="15" />
      <EnumValue value="16" />
      <EnumValue value="17" />
  </UserPref>    
  <UserPref name="showZoomControl" display_name="Show Zoom Control" datatype="bool"
  default_value="true" />
  <UserPref name="hiddenAddress" datatype="hidden" />
  <UserPref name="hiddenLat" datatype="hidden" />
  <UserPref name="hiddenLng" datatype="hidden" />

  <Content type="html"> 
    <![CDATA[
      <script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAi44TY0V29QjeejKd2l3ipRTZqGWfQErE9pT-IucjscazSdFnjBTJ_6NjcmatZ1uaEGso0_zNivkEpg"
                                 type="text/javascript"></script>

      <script type="text/javascript">
        var map;
        var MODULE_ID = "mapPoint";
        var ERROR_POINT = new GLatLng(0, 0);
        var ERROR_ZOOM = 10;
        
        function load() {
          this.prefs = new _IG_Prefs(MODULE_ID);

          if (GBrowserIsCompatible()) {
            map = new GMap2(document.getElementById("map"));
            map.setCenter(ERROR_POINT, ERROR_ZOOM);
                       
            var type = this.prefs.getInt("mapType");
            var mapType;
            if(type == 0) {
              var mapType = G_NORMAL_MAP;
            } else if(type == 1) {
              var mapType = G_SATELLITE_MAP;
            } else {
              var mapType = G_HYBRID_MAP;
            }           
            map.setMapType(mapType);
            
            var showZoomControl = this.prefs.getString("showZoomControl");
            if(showZoomControl == true) {
              map.addControl(new GSmallZoomControl());
            }           
            var zoom = this.prefs.getInt("zoom");             
            var address = this.prefs.getString("address");   
            var cachedAddress = this.prefs.getString("hiddenAddress");
            
            if(address != cachedAddress) {   
              //this is a new address so geocode it to get the location 
              geocodeAddressAndAddToMap(address, map, zoom)
            } else {
              //the address hasn't changed, so use the cached lat/lng data
              addMarkerFromCache(map, zoom);
            }                      
          }
        }
        
        function geocodeAddressAndAddToMap(address, map, zoom) {
          var geocoder = new GClientGeocoder();
          geocoder.getLatLng(address, function(point) {           
            if (!point) {
              var msg = "Unable to Display Location: " + address;
              addMessageToMap(map, msg);
            } else {
              var latlng = new GLatLng(point.y, point.x);
              addMarkerToMap(map, point, zoom);
              cacheGeocode(address, point);
            }
          });       
        }
        
        function addMarkerFromCache(map, zoom) {
          var lat = this.prefs.getString("hiddenLat");
          var lng = this.prefs.getString("hiddenLng");                   
          var latlng = new GLatLng(lat, lng);
          addMarkerToMap(map, latlng, zoom);         
        }
        
        function addMarkerToMap(map, latlng, zoom) {
          map.setCenter(latlng);
          var marker = new GMarker(latlng);
          addInfoWindowTextToMarker(marker);
          map.addOverlay(marker);                  
          map.setZoom(zoom);      
          
          var showPopup = this.prefs.getBool("showPopup");
          if(showPopup == true && this.popupText) {
            marker.openInfoWindowHtml(this.popupText);
          } 
        }
        
        function addMessageToMap(map, msg) {
          map.setCenter(ERROR_POINT, ERROR_ZOOM);
          map.openInfoWindow(map.getCenter(),
                   document.createTextNode(msg));
        }
        
        function addInfoWindowTextToMarker(marker) {
          this.popupText = this.prefs.getString("popupText");
          if(this.popupText) {
            GEvent.addListener(marker, "click", function() {
              marker.openInfoWindowHtml(this.popupText);
            });
          }              
        }
        
        function cacheGeocode(address, point) {
          this.prefs.set("hiddenLng", point.x);
          this.prefs.set("hiddenLat", point.y);
          this.prefs.set("hiddenAddress", address);
        }

        _IG_RegisterOnloadHandler(load);
      </script>
      <div id="map" style="margin:auto; width: 100%; height: 300px"></div>
    ]]>
  </Content>
</Module> 