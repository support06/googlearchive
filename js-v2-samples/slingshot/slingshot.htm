<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>Google Maps JavaScript API Example</title>
    <style type="text/css">
    v\:* {
      behavior:url(#default#VML);
    }
    </style>

    <script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAA-O3c-Om9OcvXMOJXreXHAxT2MGhLvOJt8GrjSUL43OmcjQmGtxTaPEpHKK2neSdfBYbnzoxnoZ7Sww&amp;svgf=t"
            type="text/javascript"></script>
    <script type="text/javascript">
    //<![CDATA[

    var map;
    var polygon;
    var polygonNumSides;
    var timer;
    var centerPixel;
    var mapNormalProj;
    var polygonNumSides = 5;
    var moveAmountX = 0;
    var moveAmountY = 0;
    var mapCenter;
    var mapZoom;
    var mapTarget;
    var targetPixel;
    var totalMoveAmountX;
    var totalMoveAmountY;
    var slingTopPoint;
    var slingBottomPoint;
    var slingTopLine;
    var slingBottomLine;
    var animCounter = 0; 
    var currentMarker;

    function load() {
      if (GBrowserIsCompatible()) {
        map = new GMap2(document.getElementById("map"));
        map.setCenter(new GLatLng(40.713955826286046,-35.15625), 2);
        map.disableDragging();
	mapNormalProj = G_NORMAL_MAP.getProjection();
        mapCenter = map.getCenter();
	mapZoom = map.getZoom();
        centerPixel = mapNormalProj.fromLatLngToPixel(mapCenter, mapZoom);
        slingTopPoint = new GLatLng(45.82879925192134,-35.859375);
        slingBottomPoint = new GLatLng(35.17380831799959,-34.8046875);
        currentMarker = createMarker(mapCenter);
        map.addOverlay(currentMarker);
        mapTarget = currentMarker.getPoint();
        mapZoom = map.getZoom();
        targetPixel = mapNormalProj.fromLatLngToPixel(mapTarget, mapZoom);
        drawSlingshot(currentMarker);             
      }
    }
  
   function createMarker(point) {
          var marker = new GMarker(point, {draggable:true, bouncy:true});
	  
 	  // This line highlights the marker while dragging
          GEvent.addListener(marker, "drag", function() {
            currentMarker = marker;
            drawSlingshot();
          });

 	  // This line highlights the marker while dragging
          GEvent.addListener(marker, "dragend", function() {
            mapCenter = map.getCenter();
     	    mapZoom = map.getZoom();
            centerPixel = mapNormalProj.fromLatLngToPixel(mapCenter, mapZoom);

            mapTarget = marker.getPoint();
            mapZoom = map.getZoom();
            targetPixel = mapNormalProj.fromLatLngToPixel(mapTarget, mapZoom);
            totalMoveAmountX = -2*(targetPixel.x - centerPixel.x);
            totalMoveAmountY = -2*(targetPixel.y - centerPixel.y);
            moveAmountX = totalMoveAmountX/10;
            moveAmountY = totalMoveAmountY/10;
            animCounter = 0;
            timer = setInterval("animatePoly()",100);	
          });

          return marker;
    }

    function drawSlingshot(marker) {
      var oldSlingBottomLine = slingBottomLine;

      var slingPoints = new Array();
      slingPoints.push(slingBottomPoint);
      slingPoints.push(currentMarker.getPoint());
      slingPoints.push(slingTopPoint);
      slingPoints.push(slingBottomPoint);
      slingBottomLine = new GPolygon(slingPoints,"#000000",2,.5,"#FF0000",.0);
      map.removeOverlay(oldSlingBottomLine);
      map.addOverlay(slingBottomLine);

      mapTarget = currentMarker.getPoint();
      mapZoom = map.getZoom();
      targetPixel = mapNormalProj.fromLatLngToPixel(mapTarget, mapZoom);
      
      drawPoly();             
    }
 
   
    function animatePoly() {        
        drawPoly();
	if(animCounter >= 10){
          moveAmountX = 0;
          moveAmountY = 0;
	  clearInterval(timer);
	} else {
	  targetPixel.x += moveAmountX;
	  targetPixel.y += moveAmountY;
          animCounter++;
	}
     }
    
    function drawPoly() {
	var polyPoints = new Array();
	var oldPolygon = polygon;
     	  for (var a = 0; a<(polygonNumSides+1); a++) {
	    var aRad = (360/polygonNumSides)*a*(Math.PI/180);
	    var polyRadius = 5; 
       	    var pixelX = targetPixel.x + polyRadius * Math.cos(aRad);
	    var pixelY = targetPixel.y + polyRadius * Math.sin(aRad);
	    var polyPixel = new GPoint(pixelX,pixelY);
	    var polyPoint = mapNormalProj.fromPixelToLatLng(polyPixel,mapZoom);
	    polyPoints.push(polyPoint);
	  }
	polygon = new GPolygon(polyPoints,"#000000",2,.5,"#FF0000",.5);
	map.removeOverlay(oldPolygon);
	map.addOverlay(polygon);
    }

    //]]>
    </script>
  </head>

  <body onload="load()" onunload="GUnload()">
    <div id="map" style="width: 500px; height: 300px"></div>

  </body>
</html>


