<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<title>Google Maps JavaScript API Example - EZ Google Map Digitizer</title>
<style type="text/css">
    v\:* {
      behavior:url(#default#VML);
    }
    body {
      font-family:Arial,Helvetica,Sans Serif;
      font-size:10pt;
    }
    </style>
<script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjU0EJWnWPMv7oQ-jjS7dYxSPW5CJgpdgO_s4yyMovOaVh_KvvhSfpvagV18eOyDWu7VytS6Bi1CWxw"
            type="text/javascript"></script>
<script type="text/javascript">
    //<![CDATA[

    var map;
    var polyShape;
    var polygonMode;
    var polygonDepth = "20";
    var polyPoints = Array();
    var drawMode;
    var oldMarker;
    var geocoder = null;

    var fillColor = "#0000FF"; // blue fill
    var lineColor = "#000000"; // black line
    var opacity = ".5";
    var lineWeight = "2";

    var kmlFillColor = "7dff0000"; // half-opaque blue fill

    function load() {
      if (GBrowserIsCompatible()) {
        map = new GMap2(document.getElementById("map"));
        map.setCenter(new GLatLng(37.4224, -122.0838), 13);
   	    map.addControl(new GLargeMapControl());
	    map.addControl(new GMapTypeControl());
	    GEvent.addListener(map, 'click', mapClick);
		geocoder = new GClientGeocoder();
       }
    }


   // mapClick - Handles the event of a user clicking anywhere on the map
   // Adds a new point to the map and draws either a new line from the last point
   // or a new polygon section depending on the drawing mode.


    function mapClick(marker, clickedPoint) {

      var mapNormalProj = G_NORMAL_MAP.getProjection();
      var mapZoom = map.getZoom();
     ////notneeded var oldPolygon = polygon;
       
      polygonMode = document.getElementById("drawMode_polygon").checked;

      oldMarker = marker;

      // Get new pixel and polypoint
      // Push onto polypoints of existing polygon

      var clickedPixel = mapNormalProj.fromLatLngToPixel(clickedPoint, mapZoom);
      var polyPixel = new GPoint(clickedPixel.x,clickedPixel.y);
      var polyPoint = mapNormalProj.fromPixelToLatLng(polyPixel,mapZoom);
      polyPoints.push(polyPoint);

      map.removeOverlay(oldMarker);
      map.addOverlay(new GMarker(polyPoint));

      drawCoordinates();
     }


      // Clear current Map
      function clearMap(){
        map.clearOverlays();
        polyShape = null;
        polyPoints = Array();
      // logCoordinates();
	    document.getElementById("coords").innerHTML =  "&lt;-- Click on the map to digitize!";
      }


      // Toggle from Polygon PolyLine mode

      function toggleDrawMode(){
        map.clearOverlays();
        polyShape = null;
		polygonMode = document.getElementById("drawMode_polygon").checked;

       // polyPoints = Array();
      drawCoordinates();
      }


    // Delete last Point
    // This function removes the last point from the Polyline/Polygon and redraws
    // map.

    function deleteLastPoint(){
      map.removeOverlay(polyShape);
      // pop last element of polypoint array
      polyPoints.pop();
      drawCoordinates();
     }


    // drawCoordinates
    function drawCoordinates(){
	
	  //Re-create Polyline/Polygon

	  if (polygonMode) {
	    polyShape = new GPolygon(polyPoints,lineColor,lineWeight,opacity,fillColor,opacity);
	  } else {
	    polyShape = new GPolyline(polyPoints,lineColor,lineWeight,opacity);
	    }
	  map.clearOverlays();
	  map.addOverlay(polyShape);

	  // Grab last point of polyPoints to add new marker
	  var tmpPoint = polyPoints[polyPoints.length -1];
	  map.addOverlay(new GMarker(tmpPoint));

	  logCoordinates();
	
    }

    // logCoordinates - prints out coordinates of global polyPoints array
    //  This version only logs KML, but could be extended to log different types of output

    function logCoordinates(){
       document.getElementById("coords").innerHTML = "";

      for (var i = 0; i<(polyPoints.length); i++) {
	var lat = polyPoints[i].y;
	var longi = polyPoints[i].x;
	document.getElementById("coords").innerHTML += lat + ", " + longi + "\n";
       }
    }


 function showAddress(address) {
   if (geocoder) {
     geocoder.getLatLng(
       address,
       function(point) {
         if (!point) {
           alert(address + " not found");
         } else {
           map.setCenter(point, 13);
           clearMap();
         }
       }
     );
   }
 }


    //]]>
    </script>
</head>
<body onload="load()" onunload="GUnload()">
<h3>EZ Google Maps Digitizer</h3>
<form action="#" onsubmit="showAddress(this.address.value); return false">
  <h4>Search for location (by geocoding and/or dragging)</h4>
  <p>
    <input type="text" size="40" name="address" value="1600 Amphitheatre Pky, Mountain View, CA" />
    <input type="submit" value="Geocode!" />
  </p>
</form>
</p>
Draw mode:
<input type="radio" name="drawMode" id="drawMode_polyline" value="polyline" onclick="toggleDrawMode();" checked="checked" />
PolyLine
<input type="radio" name="drawMode" id="drawMode_polygon" value="polygon" onclick="toggleDrawMode();">
Polygon
   &nbsp;&nbsp;
<input type="button" onclick="deleteLastPoint();" value="Delete Last Point"/>
<input type="button" onclick="clearMap();" value="Clear Map"/>
<br/>
<br/>
<table>
  <tr valign="top">
    <td><div id="map" style="width: 600px; height: 500px"></div></td>
    <td><div id="status" style="width:500px; height: 60px;">
        <textarea id="coords" cols="40" rows="20" readonly="true" onclick="this.select();">&lt;-- Click on the map to digitize!</textarea>
       <br/>
       KML output (Save to .kml file and open in Google Earth!) 
      </div></td>
  </tr>
</table>
</body>
</html>
